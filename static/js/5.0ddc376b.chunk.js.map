{"version":3,"sources":["components/ChatPage/ChatPage.tsx"],"names":["ws","WebSocket","Chat","Messages","AddMessagesForm","useState","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","map","m","index","Message","key","message","src","photo","style","width","alt","userName","setMessage","readyStatus","setReadyStatus","onChange","currentTarget","value","disabled","onClick","send","ChatPage"],"mappings":"8JAEMA,EAAK,IAAIC,UAAU,gEAiBnBC,EAAiB,WACnB,OAAQ,6BACJ,kBAACC,EAAD,MACA,kBAACC,EAAD,QAMFD,EAAqB,WAAO,IAAD,EACGE,mBAA4B,IAD/B,mBACtBC,EADsB,KACZC,EADY,KAS7B,OAPAC,qBAAU,WACNR,EAAGS,iBAAiB,WAAW,SAACC,GAC5B,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAACQ,GAAD,4BAAsBA,GAAtB,YAAuCJ,YAExD,IAEK,6BACHL,EAASU,KAAI,SAACC,EAAGC,GAAJ,OAAc,kBAACC,EAAD,CAASC,IAAKF,EAAOG,QAASJ,SAM5DE,EAAkD,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QAEvD,OAAQ,6BACJ,yBAAKC,IAAKD,EAAQE,MAAOC,MAAO,CAAEC,MAAO,QAAUC,IAAK,KADpD,IAC2D,2BAAIL,EAAQM,UAC3E,6BACCN,EAAQA,QACT,+BAMFjB,EAA4B,WAAO,IAAD,EACNC,mBAAS,IADH,mBAC7BgB,EAD6B,KACpBO,EADoB,OAEEvB,mBAA8B,WAFhC,mBAE7BwB,EAF6B,KAEhBC,EAFgB,KAIpCtB,qBAAU,WACNR,EAAGS,iBAAiB,QAAQ,WACxBqB,EAAe,cAEpB,IAUH,OAAQ,6BAAK,6BACT,8BAAUC,SAAU,SAACrB,GAAD,OAAOkB,EAAWlB,EAAEsB,cAAcC,QAAQA,MAAOZ,KAGrE,6BACI,4BAAQa,SAA0B,UAAhBL,EAAyBM,QAb/B,WACXd,IAGLrB,EAAGoC,KAAKf,GACRO,EAAW,OAQP,WAMGS,UA1EY,WACvB,OAAQ,6BACJ,kBAACnC,EAAD","file":"static/js/5.0ddc376b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return (<div>\r\n        <Chat />\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n    return (<div>\r\n        <Messages></Messages>\r\n        <AddMessagesForm />\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n    useEffect(() => {\r\n        ws.addEventListener('message', (e) => {\r\n            let newMessages = JSON.parse(e.data)\r\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\r\n        })\r\n    }, [])\r\n\r\n    return (<div>\r\n        {messages.map((m, index) => <Message key={index} message={m} />)}\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageType }> = ({ message }) => {\r\n\r\n    return (<div>\r\n        <img src={message.photo} style={{ width: '30px' }} alt={''} /> <b>{message.userName}</b>\r\n        <br />\r\n        {message.message}\r\n        <hr />\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nconst AddMessagesForm: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\r\n\r\n    useEffect(() => {\r\n        ws.addEventListener('open', () => {\r\n            setReadyStatus('ready');\r\n        })\r\n    }, [])\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        ws.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n    return (<div><div>\r\n        <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}\r\n        ></textarea>\r\n    </div>\r\n        <div>\r\n            <button disabled={readyStatus !== 'ready'} onClick={sendMessage}>Send</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage"],"sourceRoot":""}